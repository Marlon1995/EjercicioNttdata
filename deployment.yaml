apiVersion: v1
kind: Namespace
metadata:
  name: devops-microservice

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-microservice
  namespace: devops-microservice
spec:
  replicas: 2  # Número de réplicas de tu aplicación
  selector:
    matchLabels:
      app: devops-microservice
  template:
    metadata:
      labels:
        app: devops-microservice
    spec:
      containers:
      - name: devops-microservice
        image: kfcregistry.azurecr.io/devops-microservice:latest  # Aquí pones la imagen que hayas creado
        ports:
        - containerPort: 8080
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: devops-config
              key: environment
        resources:
          limits:
            memory: "512Mi"
            cpu: "1"
          requests:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: devops-microservice
  namespace: devops-microservice
spec:
  selector:
    app: devops-microservice
  ports:
    - protocol: TCP
      port: 80         # Puerto que estará expuesto en el clúster
      targetPort: 8080  # Puerto al que se conecta el contenedor
  type: LoadBalancer   # Esto se usa para exponer el servicio a través de un balanceador de carga
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: devops-microservice-ingress
  namespace: devops-microservice
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: devops.example.com  # El dominio que usarás para acceder a tu aplicación
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: devops-microservice
            port:
              number: 80
